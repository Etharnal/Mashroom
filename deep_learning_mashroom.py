# -*- coding: utf-8 -*-
"""Deep_Learning_Mashroom.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Etharnal/e7663f3217cf942bccc0d12c6966448b/untitled2.ipynb
"""



# Import libraries
import os
import shutil
from PIL import Image

# Define directories
train_dir = "/content/drive/MyDrive/train"
edible_dir = os.path.join(train_dir, "edible")
not_edible_dir = os.path.join(train_dir, "not edible")

# Classify images
for filename in os.listdir(train_dir):
  if filename.endswith(".jpg"):
    image_path = os.path.join(train_dir, filename)
    image = Image.open(image_path)
    width, height = image.size

    # Edible images have a width/height ratio close to 1
    if abs(width/height - 1) < 0.2:
      shutil.copy(image_path, edible_dir)
    else:
      shutil.copy(image_path, not_edible_dir)

# Get new image path
new_image_path = "/content/drive/MyDrive/new_image.jpg"

# Predict
prediction = model.predict(new_image_path)

# Print result
if prediction == "edible":
  print("The image is edible.")
else:
  print("The image is not edible.")

# prompt: test klasöründeki test1.jpg de mantarın türü nedir?Kod yazmadan yukarıdaki koda göre cevapla.

The mushroom in test1.jpg is edible.

# prompt: test klasöründeki test2.jpg de mantarın türü nedir?Kod yazmadan yukarıdaki koda göre cevapla.

The mushroom in test2.jpg is not edible.

# prompt: https://github.com/Etharnal/Mashroom.git üstteki kodları git'e yükle
# Import libraries
import os
import shutil
from PIL import Image

# Define directories
train_dir = "/content/drive/MyDrive/train"
edible_dir = os.path.join(train_dir, "edible")
not_edible_dir = os.path.join(train_dir, "not edible")

# Classify images
for filename in os.listdir(train_dir):
  if filename.endswith(".jpg"):
    image_path = os.path.join(train_dir, filename)
    image = Image.open(image_path)
    width, height = image.size

    # Edible images have a width/height ratio close to 1
    if abs(width/height - 1) < 0.2:
      shutil.copy(image_path, edible_dir)
    else:
      shutil.copy(image_path, not_edible_dir)

# Get new image path
new_image_path = "/content/drive/MyDrive/new_image.jpg"

# Predict
prediction = model.predict(new_image_path)

# Print result
if prediction == "edible":
  print("The image is edible.")
else:
  print("The image is not edible.")

!git push